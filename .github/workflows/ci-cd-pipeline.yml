name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "sourcy-api/**"
      - "sourcy-infras/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: tutran0806/sourcy-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Build Docker image
        working-directory: ./sourcy-api
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$COMMIT_HASH .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        working-directory: ./sourcy-api
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          docker push $IMAGE_NAME:$COMMIT_HASH

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_WORKING_DIR: ./sourcy-infras
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Plan Terraform changes
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          terraform plan -var "docker_image=$IMAGE_NAME:$COMMIT_HASH"

      - name: Apply Terraform changes
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          terraform apply -auto-approve -var "docker_image=$IMAGE_NAME:$COMMIT_HASH"
